{"version":3,"sources":["store/calendar/index.js","store/reducers.js","store/index.js","store/calendar/actions.js","components/Calendar.js","components/Modal.js","components/Datepicker.js","components/EventForm.js","components/EventFormModal.js","components/App.js","index.js"],"names":["initialState","_initialState","events","Object","defineProperty","combineReducers","calendar","_objectSpread2","_objectSpread6","state","arguments","length","undefined","_ref","type","payload","objectSpread","OPEN_EVENT_FORM","editingEvent","concat","id","Date","now","Math","floor","random","map","event","filter","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","toggleEventFormModal","moment","locale","localizer","BigCalendar","momentLocalizer","eventStyles","Solo","background","Team","Company","mDtP","openEditEvent","connect","react_default","a","createElement","lib_default","views","titleAccessor","startAccessor","endAccessor","date","add","toDate","eventPropGetter","style","popup","selectable","onSelectEvent","ReactModal","setAppElement","document","getElementById","StyledModal","styled","className","contentClassName","onClose","props","objectWithoutProperties","overClassName","react_modal_lib_default","assign","shouldCloseOnOverlayClick","onRequestClose","overlayClassName","_templateObject","DatePicker","eventStates","eventSchema","Yup","shape","name","required","default","max","typeError","oneOf","EnhancedForm","withFormik","mapPropsToValues","_ref2","_ref2$event","cast","validationSchema","handleSubmit","values","_ref3","onSubmit","touched","errors","handleChange","handleBlur","setFieldValue","onDeleteEvent","flex","components","htmlFor","autoComplete","maxLength","onChange","onBlur","value","Datepicker","selected","showTimeSelect","timeIntervals","dateFormat","timeFormat","key","flexDirection","info","outlined","danger","marginRight","onClick","small","createEvent","editEvent","onCloseModal","deleteEvent","isOpen","find","ev","Modal","Heading","Block","backgroundColor","components_EventForm","Layout","Container","App_templateObject","Header","div","_templateObject2","NewEventButton","primary","CalendarContainer","_templateObject3","onNewEventClick","App_NewEventButton","height","components_Calendar","components_EventFormModal","ReactDOM","render","es","components_App"],"mappings":"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","file":"static/js/main.78f76ec5.chunk.js","sourcesContent":["export const OPEN_EVENT_FORM = 'OPEN_EVENT_FORM';\nexport const CREATE_EVENT = 'CREATE_EVENT';\nexport const OPEN_EDIT_EVENT = 'OPEN_EDIT_EVENT';\nexport const EDIT_EVENT = 'EDIT_EVENT';\nexport const DELETE_EVENT = 'DELETE_EVENT';\n\nconst initialState = {\n  events: [],\n  [OPEN_EVENT_FORM]: false,\n  editingEvent: null,\n};\n\nconst generateId = () => Date.now() + Math.floor(Math.random() * 1000);\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case OPEN_EVENT_FORM:\n      return {\n        ...state,\n        [OPEN_EVENT_FORM]: !state.OPEN_EVENT_FORM,\n        editingEvent: OPEN_EVENT_FORM ? initialState.editingEvent : state.editingEvent,\n      };\n\n    case CREATE_EVENT:\n      return {\n        ...state,\n        events: state.events.concat([{ id: generateId(), ...payload }]),\n        [OPEN_EVENT_FORM]: false,\n      };\n\n    case EDIT_EVENT:\n      return {\n        ...state,\n        editingEvent: null,\n        events: state.events.map((event) => {\n          if (event.id !== payload.id) {\n            return event;\n          }\n\n          return { ...event, ...payload };\n        }),\n        [OPEN_EVENT_FORM]: false,\n      };\n\n    case OPEN_EDIT_EVENT:\n      return {\n        ...state,\n        editingEvent: payload,\n        [OPEN_EVENT_FORM]: true,\n      };\n\n    case DELETE_EVENT:\n      return {\n        ...state,\n        editingEvent: null,\n        [OPEN_EVENT_FORM]: false,\n        events: state.events.filter(event => event.id !== payload),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport calendar from './calendar';\n\nexport default combineReducers({\n  calendar,\n});\n","/* eslint-disable no-underscore-dangle  */\nimport { createStore } from 'redux';\nimport reducers from './reducers';\n\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import {\n  OPEN_EVENT_FORM, CREATE_EVENT, OPEN_EDIT_EVENT, EDIT_EVENT, DELETE_EVENT,\n} from '.';\n\nexport const toggleEventFormModal = () => ({\n  type: OPEN_EVENT_FORM,\n});\n\nexport const createEvent = event => ({\n  type: CREATE_EVENT,\n  payload: event,\n});\n\nexport const openEditEvent = event => ({\n  type: OPEN_EDIT_EVENT,\n  payload: event.id,\n});\n\nexport const editEvent = event => ({\n  type: EDIT_EVENT,\n  payload: event,\n});\n\n\nexport const deleteEvent = event => ({\n  type: DELETE_EVENT,\n  payload: event.id,\n});\n","import React from 'react';\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/en-gb';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { connect } from 'react-redux';\nimport { openEditEvent } from '../store/calendar/actions';\n\nmoment.locale('en-gb');\nconst localizer = BigCalendar.momentLocalizer(moment);\n\nconst eventStyles = {\n  Solo: { background: '#31ad9d' },\n  Team: { background: '#5131ad' },\n  Company: { background: '#3160ad' },\n};\n\nconst Calendar = ({ events, openEditEvent }) => (\n  <BigCalendar\n    localizer={localizer}\n    views={['month']}\n    events={events}\n    titleAccessor=\"name\"\n    startAccessor=\"date\"\n    endAccessor={event => moment(event.date).add(1, 'hour').toDate()}\n    eventPropGetter={event => ({ style: eventStyles[event.state] })}\n    popup\n    selectable\n    onSelectEvent={openEditEvent}\n  />\n);\n\nconst mStP = state => ({\n  events: state.calendar.events,\n});\n\nconst mDtP = {\n  openEditEvent,\n};\n\nexport default connect(mStP, mDtP)(Calendar);\n","import React from 'react';\nimport styled from 'styled-components';\nimport ReactModal from 'react-modal';\n\nReactModal.setAppElement(document.getElementById('root'));\n\nfunction ReactModalAdapter({\n  className, contentClassName, onClose, ...props\n}) {\n  const overClassName = `${className}__overlay columns`;\n  return (\n    <ReactModal\n      shouldCloseOnOverlayClick\n      onRequestClose={onClose}\n      overlayClassName={overClassName}\n      className={contentClassName}\n      {...props}\n    />\n  );\n}\n\nconst StyledModal = styled(ReactModalAdapter)`\n  &__overlay {\n    z-index: 1000;\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    align-items: center;\n    justify-content: center;\n    outline: none;\n    bottom: 0px;\n    background-color: rgba(0,0,0, 0.5);\n\n    .ReactModal__Content { \n      outline: none;  \n    }\n\n  }\n`;\n\nexport default StyledModal;\n","import 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from 'react-datepicker';\n\nexport default DatePicker;\n","import React from 'react';\nimport {\n  Input, Field, Control, Button, Icon,\n} from 'reactbulma';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport DatePicker from './Datepicker';\n\nconst eventStates = ['Solo', 'Team', 'Company'];\nconst eventSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Event name is required')\n    .default('')\n    .max(20),\n  date: Yup.date().required('Date is required!').typeError('Please enter a date').default(null),\n  state: Yup.string().oneOf(['Solo', 'Team', 'Company']).default('Solo'),\n});\n\nconst EventForm = ({\n  values, touched, errors, handleChange, handleBlur, handleSubmit, setFieldValue, onDeleteEvent,\n}) => (\n  <form style={{ flex: 1 }} onSubmit={handleSubmit}>\n    <Field>\n      <label className=\"label\" htmlFor=\"name\">Event Name</label>\n      <Control>\n        <Input\n          autoComplete=\"off\"\n          maxLength=\"20\"\n          className={`${errors.name && touched.name ? 'is-danger' : ''}`}\n          name=\"name\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.name}\n        />\n      </Control>\n      {errors.name && touched.name && <p className=\"help is-danger\">{errors.name}</p>}\n    </Field>\n\n    <Field>\n      <label className=\"label\" htmlFor=\"date\">Date</label>\n      <Control>\n        <DatePicker\n          className={`input ${errors.date && touched.date ? 'is-danger' : ''}`}\n          selected={values.date}\n          onChange={(date) => { setFieldValue('date', date); }}\n          showTimeSelect\n          timeIntervals={15}\n          dateFormat=\"dd/MM/yy HH:mm\"\n          timeFormat=\"HH:mm\"\n          name=\"date\"\n          onBlur={handleBlur}\n          autoComplete=\"off\"\n        />\n      </Control>\n      {errors.date && touched.date && <p className=\"help is-danger\">{errors.date}</p>}\n    </Field>\n\n    <Field>\n      <label className=\"label\" htmlFor=\"state\">State</label>\n      <Control>\n        <div className={`select ${errors.state && touched.state ? 'is-danger' : ''}`}>\n          <select\n            className=\"select\"\n            name=\"state\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.state}\n          >\n            {eventStates.map(state => (\n              <option key={state} value={state}>{state}</option>\n            ))}\n          </select>\n        </div>\n      </Control>\n      {errors.state && touched.state && <p className=\"help is-danger\">{errors.state}</p>}\n    </Field>\n\n    <div className=\"is-flex\" style={{ flexDirection: 'row-reverse' }}>\n      <Button style={{ flex: '0 25%' }} info type=\"submit\">Save</Button>\n      {onDeleteEvent && (\n      <Button outlined danger style={{ marginRight: '1em' }} onClick={onDeleteEvent} type=\"button\">\n        <Icon small>\n          <i className=\"fa fa-trash-alt\" />\n        </Icon>\n      </Button>\n      )}\n    </div>\n  </form>\n);\n\n\nconst EnhancedForm = withFormik({\n  mapPropsToValues: ({ event = {} }) => eventSchema.cast(event),\n  validationSchema: eventSchema,\n  handleSubmit: (values, { props }) => {\n    props.onSubmit(values);\n  },\n\n\n})(EventForm);\n\nexport default EnhancedForm;\n","import React from 'react';\nimport { Panel } from 'reactbulma';\nimport { connect } from 'react-redux';\nimport Modal from './Modal';\nimport EventForm from './EventForm';\nimport { OPEN_EVENT_FORM } from '../store/calendar';\nimport {\n  createEvent, toggleEventFormModal, editEvent, deleteEvent,\n} from '../store/calendar/actions';\n\n\nconst EventFormModal = ({\n  isOpen, createEvent, onCloseModal, editingEvent, deleteEvent,\n}) => (\n  <Modal\n    contentClassName=\"column is-full-mobile is-half-tablet is-one-third-desktop\"\n    isOpen={isOpen}\n    onClose={onCloseModal}\n  >\n    <div>\n      <Panel>\n        <Panel.Heading>New Event</Panel.Heading>\n        <Panel.Block style={{ backgroundColor: 'white' }}>\n          <EventForm\n            onSubmit={createEvent}\n            event={editingEvent}\n            onDeleteEvent={editingEvent && (() => { deleteEvent(editingEvent); })}\n          />\n        </Panel.Block>\n      </Panel>\n    </div>\n  </Modal>\n);\n\nconst getEventById = (events, id) => events.find(ev => ev.id === id);\n\nconst mStP = state => ({\n  isOpen: state.calendar[OPEN_EVENT_FORM],\n  editingEvent: getEventById(state.calendar.events, state.calendar.editingEvent),\n});\n\nconst mDtP = {\n  createEvent: (event) => {\n    if (event.id) { return editEvent(event); }\n    return createEvent(event);\n  },\n  onCloseModal: toggleEventFormModal,\n  deleteEvent,\n};\n\nexport default connect(mStP, mDtP)(EventFormModal);\n","import '@fortawesome/fontawesome-free/css/all.css';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {\n  Button, Icon, Container,\n} from 'reactbulma';\nimport { connect } from 'react-redux';\nimport Calendar from './Calendar';\nimport { toggleEventFormModal } from '../store/calendar/actions';\nimport EventFormModal from './EventFormModal';\n\nconst Layout = styled(Container)`\n  height: 100%;\n  display: flex;\n  flex-direction: column; \n`;\n\nconst Header = styled.div`\n  margin: 1em 0;\n`;\n\nconst NewEventButton = props => (\n  <Button primary {...props}>\n    <Icon>\n      <i className=\"fa fa-plus\" />\n    </Icon>\n    <span>New Event</span>\n  </Button>\n);\n\nconst CalendarContainer = styled.div`\n  flex:1;\n  margin-bottom: 1em;\n`;\n\nconst App = ({ events, onNewEventClick }) => (\n  <Layout>\n    <Header>\n      <NewEventButton onClick={onNewEventClick} />\n    </Header>\n    <CalendarContainer style={{ height: 'unset' }}>\n      <Calendar />\n    </CalendarContainer>\n    <EventFormModal />\n  </Layout>\n);\n\nconst mStP = state => ({\n  events: state.calendar.events,\n});\n\nconst mDtP = {\n  onNewEventClick: toggleEventFormModal,\n};\n\nexport default connect(mStP, mDtP)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n"],"sourceRoot":""}